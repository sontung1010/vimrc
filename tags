!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
,gc	vimrc.vim	/^map ,gc :Gcommit<Cr>$/;"	m
,gs	vimrc.vim	/^map ,gs :Gstatus<Cr>$/;"	m
<SID>xx	plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
ARCHIVE	bundle/vim-coffee-script/Makefile	/^ARCHIVE = vim-coffee-script-$(VERSION).zip$/;"	m
ARCHIVE_DIRS	bundle/vim-coffee-script/Makefile	/^ARCHIVE_DIRS = after autoload compiler doc ftdetect ftplugin indent syntax$/;"	m
AddDivider	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:AddDivider(text, side, mode, colors, prev, curr, next) " {{{$/;"	f
Blame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Browse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufWriteIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
Bundle	bundle/vundle/autoload/vundle.vim	/^com! -nargs=+                                                Bundle        call vundle#config#bundle(<args>)$/;"	c
BundleClean	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang                                          BundleClean   PluginClean<bang>$/;"	c
BundleDocs	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0                                                BundleDocs    PluginDocs$/;"	c
BundleInstall	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall PluginInstall<bang> <args>$/;"	c
BundleList	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0 -bang                                          BundleList    PluginList<bang>$/;"	c
BundleSearch	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch  PluginSearch<bang> <args>$/;"	c
BundleUpdate	bundle/vundle/autoload/vundle.vim	/^com!                                                         BundleUpdate  PluginInstall!$/;"	c
CheckConditions	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! s:CheckConditions(params) " {{{$/;"	f
CoffeeBufNew	bundle/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	bundle/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	bundle/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	bundle/vim-coffee-script/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeUpdateMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	bundle/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
Commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
Cterm2GUI	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! s:Cterm2GUI(cterm) " {{{$/;"	f
DetectCoffee	bundle/vim-coffee-script/ftdetect/coffee.vim	/^function! s:DetectCoffee()$/;"	f
Diff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,...) abort$/;"	f
DirComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Dispatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
Edit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
ExecuteInTree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
FileRead	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P)$/;"	f
FinishCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
GF	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GetCoffeeHtmlIndent	bundle/vim-coffee-script/after/indent/html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	bundle/vim-coffee-script/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetDefaultPolicy	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetPrevNormalLine	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetTrimmedLine	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
Git	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
Grep	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HighlightTrailingSpaces	vimrc.vim	/^augroup HighlightTrailingSpaces$/;"	a
HlCreate	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:HlCreate(hl) " {{{$/;"	f
HlExists	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:HlExists(hl) " {{{$/;"	f
IsComment	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsCommentOrString	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsString	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
JumpInit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
Log	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
Merge	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Move	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
ParseCoffeeError	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
ParseSegments	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:ParseSegments(mode, side, segments, ...) " {{{$/;"	f
Pl#ClearCache	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#ClearCache() " {{{$/;"	f
Pl#Colorscheme#Apply	bundle/vim-powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Apply(colorscheme, buffer_segments) " {{{$/;"	f
Pl#Colorscheme#Init	bundle/vim-powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Init(hi) " {{{$/;"	f
Pl#Hi#Allocate	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Allocate(colors) " {{{$/;"	f
Pl#Hi#Segments	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Segments(segments, mode_colors) " {{{$/;"	f
Pl#Load	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Load() " {{{$/;"	f
Pl#LoadCache	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#LoadCache() " {{{$/;"	f
Pl#Match#Add	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Add(pat, expr) " {{{$/;"	f
Pl#Match#Any	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Any(...) " {{{$/;"	f
Pl#Match#Validate	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Validate(theme, window) " {{{$/;"	f
Pl#Mod#AddSegmentMod	bundle/vim-powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#AddSegmentMod(action, properties) " {{{$/;"	f
Pl#Mod#ApplySegmentMods	bundle/vim-powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#ApplySegmentMods(theme) " {{{$/;"	f
Pl#Parser#GetStatusline	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#GetStatusline(segments) " {{{$/;"	f
Pl#Parser#ParseChars	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#ParseChars(arg) " {{{$/;"	f
Pl#ReloadColorscheme	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#ReloadColorscheme() " {{{$/;"	f
Pl#Segment#Create	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Create(name, ...) " {{{$/;"	f
Pl#Segment#Get	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Get(name) " {{{$/;"	f
Pl#Segment#Init	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Init(params) " {{{$/;"	f
Pl#Segment#Modes	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Modes(modes) " {{{$/;"	f
Pl#Segment#NoPadding	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#NoPadding() " {{{$/;"	f
Pl#Segment#Split	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Split(...) " {{{$/;"	f
Pl#Segment#Truncate	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Truncate() " {{{$/;"	f
Pl#Statusline	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Statusline(statusline, current) " {{{$/;"	f
Pl#StatuslineCallback	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#StatuslineCallback(statusline, args) " {{{$/;"	f
Pl#Theme#Buffer	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Buffer(ns, ...) " {{{$/;"	f
Pl#Theme#Callback	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Callback(name, expr) " {{{$/;"	f
Pl#Theme#Create	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Create(...) " {{{$/;"	f
Pl#Theme#InsertSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#InsertSegment(new_segment, where, target_segment) " {{{$/;"	f
Pl#Theme#RemoveSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#RemoveSegment(target_segment) " {{{$/;"	f
Pl#Theme#ReplaceSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#ReplaceSegment(old_segment, new_segment) " {{{$/;"	f
Pl#UpdateStatusline	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#UpdateStatusline(current, ...) " {{{$/;"	f
Plugin	bundle/vundle/autoload/vundle.vim	/^com! -nargs=+  -bar   Plugin$/;"	c
PluginClean	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang   PluginClean$/;"	c
PluginDocs	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0         PluginDocs$/;"	c
PluginInstall	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginInstall$/;"	c
PluginList	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0 -bang PluginList$/;"	c
PluginSearch	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginSearch$/;"	c
PluginUpdate	bundle/vundle/autoload/vundle.vim	/^com! PluginUpdate PluginInstall!$/;"	c
Powerline#Functions#GetCharCode	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetCharCode() " {{{$/;"	f
Powerline#Functions#GetFilepath	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilepath() " {{{$/;"	f
Powerline#Functions#GetFilesize	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilesize() " {{{$/;"	f
Powerline#Functions#GetMode	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetMode() " {{{$/;"	f
Powerline#Functions#GetShortPath	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetShortPath(threshold) " {{{$/;"	f
Powerline#Functions#GetWSMarker	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetWSMarker() " {{{$/;"	f
Powerline#Functions#ft_man#GetName	bundle/vim-powerline/autoload/Powerline/Functions/ft_man.vim	/^function! Powerline#Functions#ft_man#GetName() " {{{$/;"	f
Powerline#Functions#fugitive#GetBranch	bundle/vim-powerline/autoload/Powerline/Functions/fugitive.vim	/^function! Powerline#Functions#fugitive#GetBranch(symbol) " {{{$/;"	f
Powerline#Functions#hgrev#Status	bundle/vim-powerline/autoload/Powerline/Functions/hgrev.vim	/^function! Powerline#Functions#hgrev#Status(symbol) " {{{$/;"	f
Powerline#Functions#syntastic#GetErrors	bundle/vim-powerline/autoload/Powerline/Functions/syntastic.vim	/^function! Powerline#Functions#syntastic#GetErrors(line_symbol) " {{{$/;"	f
PowerlineClearCache	bundle/vim-powerline/plugin/Powerline.vim	/^	command! PowerlineClearCache call Pl#ClearCache()$/;"	c
PowerlineReloadColorscheme	bundle/vim-powerline/plugin/Powerline.vim	/^	command! PowerlineReloadColorscheme call Pl#ReloadColorscheme()$/;"	c
PowerlineStartup	bundle/vim-powerline/plugin/Powerline.vim	/^	augroup PowerlineStartup$/;"	a
REF	bundle/vim-coffee-script/Makefile	/^REF = HEAD$/;"	m
RehighlightBlame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
RemoteComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
ReplaceCmd	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
RevisionComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
SYM_ATTR	bundle/vim-powerline/fontpatcher/fontpatcher	/^SYM_ATTR = {$/;"	v
ScratchBufBuild	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
SearchCode	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchMatchingKeyword	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchPair	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SetMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
ShiftWidth	bundle/vim-coffee-script/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShouldSkip	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
StageDiff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
Startup	bundle/vim-powerline/plugin/Powerline.vim	/^	function! s:Startup()$/;"	f
Status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
SwitchWindow	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
SyntaxName	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
TagList_IsValid	plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
Tlist	plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Filenames	plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_Tag_Linenum	plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
UpdateMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
VERSION	bundle/vim-coffee-script/Makefile	/^VERSION = $(shell git describe --always $(REF))$/;"	m
Ve	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vopen	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
VundleClean	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang                                          VundleClean   PluginClean<bang>$/;"	c
VundleDocs	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0                                                VundleDocs    PluginDocs$/;"	c
VundleInstall	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleInstall PluginInstall<bang> <args>$/;"	c
VundleSearch	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleSearch  PluginSearch<bang> <args>$/;"	c
VundleUpdate	bundle/vundle/autoload/vundle.vim	/^com!                                                         VundleUpdate  PluginInstall!$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
Wq	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
add_methods	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(0, 0)$/;"	v
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(font_dim['width'] - sym_dim['width'], 0)$/;"	v
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(font_dim['width'] \/ 2 - sym_dim['width'] \/ 2 , 0)$/;"	v
argparse	bundle/vim-powerline/fontpatcher/fontpatcher	/^import argparse$/;"	i
args	bundle/vim-powerline/fontpatcher/fontpatcher	/^args = parser.parse_args()$/;"	v
b:current_syntax	bundle/vim-coffee-script/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:did_ftplugin	bundle/vim-coffee-script/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	bundle/vim-coffee-script/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
bundle.is_pinned	bundle/vundle/autoload/vundle/config.vim	/^func! s:bundle.is_pinned()$/;"	f
bundle.path	bundle/vundle/autoload/vundle/config.vim	/^func! s:bundle.path()$/;"	f
can_diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
check_bundle_name	bundle/vundle/autoload/vundle/config.vim	/^funct! s:check_bundle_name(bundle)$/;"	f
coffee#CoffeeSetUpErrorFormat	bundle/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	bundle/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
configured_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
create_changelog	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:create_changelog() abort$/;"	f
current_compiler	bundle/vim-coffee-script/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	bundle/vim-coffee-script/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
define_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
diff_modifier	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
division	bundle/vim-powerline/fontpatcher/fontpatcher	/^from __future__ import division$/;"	i
expand_path	bundle/vundle/autoload/vundle/config.vim	/^func! s:expand_path(path) abort$/;"	f
extension	bundle/vim-powerline/fontpatcher/fontpatcher	/^		extension = 'otf'$/;"	v
fetch_scripts	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd)$/;"	f
fnameescape	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
font	bundle/vim-powerline/fontpatcher/fontpatcher	/^		font = fontforge.open(font_path)$/;"	v
font_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^	font_dim = {$/;"	v
font_ycenter	bundle/vim-powerline/fontpatcher/fontpatcher	/^		font_ycenter = font_dim['height'] \/ 2$/;"	v
fontforge	bundle/vim-powerline/fontpatcher/fontpatcher	/^	import fontforge$/;"	i
fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cwindow	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
g:Pl#HL	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#HL = []$/;"	v
g:Pl#OLD_STL	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#OLD_STL = ''$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^	let g:Pl#Parser#Symbols[g:Powerline_symbols].dividers = g:Powerline_dividers_override$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^	let g:Pl#Parser#Symbols[g:Powerline_symbols].symbols[s:key] = s:value$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let g:Pl#Parser#Symbols = {$/;"	v
g:Pl#THEME	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#THEME = []$/;"	v
g:Pl#THEME_CALLBACKS	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#THEME_CALLBACKS = []$/;"	v
g:Powerline#Colorschemes#default#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/default.vim	/^let g:Powerline#Colorschemes#default#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Colorschemes#solarized#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/solarized.vim	/^let g:Powerline#Colorschemes#solarized#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Colorschemes#solarized16#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/solarized16.vim	/^let g:Powerline#Colorschemes#solarized16#colorscheme= Pl#Colorscheme#Init([$/;"	v
g:Powerline#Colorschemes#solarized256#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/solarized256.vim	/^let g:Powerline#Colorschemes#solarized256#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Matches#matches	bundle/vim-powerline/autoload/Powerline/Matches.vim	/^let g:Powerline#Matches#matches = {$/;"	v
g:Powerline#Segments#ctrlp#segments	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^let g:Powerline#Segments#ctrlp#segments = Pl#Segment#Init(['ctrlp'$/;"	v
g:Powerline#Segments#ctrlp#segments#focus	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#focus = '%{"%0"}'$/;"	v
g:Powerline#Segments#ctrlp#segments#next	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#next = '%-3{"%5"}'$/;"	v
g:Powerline#Segments#ctrlp#segments#prev	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#prev = '%-3{"%3"}'$/;"	v
g:Powerline#Segments#ft_man#segments	bundle/vim-powerline/autoload/Powerline/Segments/ft_man.vim	/^let g:Powerline#Segments#ft_man#segments = Pl#Segment#Init(['ft_man',$/;"	v
g:Powerline#Segments#fugitive#segments	bundle/vim-powerline/autoload/Powerline/Segments/fugitive.vim	/^let g:Powerline#Segments#fugitive#segments = Pl#Segment#Init(['fugitive',$/;"	v
g:Powerline#Segments#hgrev#segments	bundle/vim-powerline/autoload/Powerline/Segments/hgrev.vim	/^let g:Powerline#Segments#hgrev#segments = Pl#Segment#Init(['hgrev',$/;"	v
g:Powerline#Segments#rvm#segments	bundle/vim-powerline/autoload/Powerline/Segments/rvm.vim	/^let g:Powerline#Segments#rvm#segments = Pl#Segment#Init(['rvm',$/;"	v
g:Powerline#Segments#segments	bundle/vim-powerline/autoload/Powerline/Segments.vim	/^let g:Powerline#Segments#segments = Pl#Segment#Init([$/;"	v
g:Powerline#Segments#syntastic#segments	bundle/vim-powerline/autoload/Powerline/Segments/syntastic.vim	/^let g:Powerline#Segments#syntastic#segments = Pl#Segment#Init(['syntastic',$/;"	v
g:Powerline#Segments#tagbar#segments	bundle/vim-powerline/autoload/Powerline/Segments/tagbar.vim	/^let g:Powerline#Segments#tagbar#segments = Pl#Segment#Init(['tagbar',$/;"	v
g:Powerline#Segments#virtualenv#segments	bundle/vim-powerline/autoload/Powerline/Segments/virtualenv.vim	/^let g:Powerline#Segments#virtualenv#segments = Pl#Segment#Init(['virtualenv',$/;"	v
g:Powerline#Themes#default#theme	bundle/vim-powerline/autoload/Powerline/Themes/default.vim	/^let g:Powerline#Themes#default#theme = Pl#Theme#Create($/;"	v
g:Powerline#Themes#solarized16#theme	bundle/vim-powerline/autoload/Powerline/Themes/solarized16.vim	/^let g:Powerline#Themes#solarized16#theme = Pl#Theme#Create($/;"	v
g:Powerline#Themes#solarized256#theme	bundle/vim-powerline/autoload/Powerline/Themes/solarized256.vim	/^let g:Powerline#Themes#solarized256#theme = Pl#Theme#Create($/;"	v
g:Powerline_cache_dir	bundle/vim-powerline/plugin/Powerline.vim	/^		let g:Powerline_cache_dir = simplify(expand('<sfile>:p:h') .'\/..')$/;"	v
g:Powerline_colorscheme	vimrc.vim	/^let g:Powerline_colorscheme='solarized256'$/;"	v
g:Powerline_loaded	bundle/vim-powerline/plugin/Powerline.vim	/^	let g:Powerline_loaded = 1$/;"	v
g:Powerline_symbols	vimrc.vim	/^  let g:Powerline_symbols='fancy'$/;"	v
g:colors_name	colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	colors/zenburn.vim	/^let g:colors_name="zenburn"$/;"	v
g:fugitive_browse_handlers	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:loaded_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:syntastic_aggregate_errors	vimrc.vim	/^let g:syntastic_aggregate_errors = 1$/;"	v
g:syntastic_auto_loc_list	vimrc.vim	/^let g:syntastic_auto_loc_list = 1$/;"	v
g:zenburn_alternate_Error	colors/zenburn.vim	/^    let g:zenburn_alternate_Error = 0$/;"	v
g:zenburn_alternate_Include	colors/zenburn.vim	/^    let g:zenburn_alternate_Include = 0$/;"	v
g:zenburn_alternate_Visual	colors/zenburn.vim	/^    let g:zenburn_alternate_Visual = 0$/;"	v
g:zenburn_color_also_Ignore	colors/zenburn.vim	/^    let g:zenburn_color_also_Ignore = 0$/;"	v
g:zenburn_disable_ctags_highlighting_support	colors/zenburn.vim	/^    let g:zenburn_disable_ctags_highlighting_support = 0$/;"	v
g:zenburn_force_dark_Background	colors/zenburn.vim	/^    let g:zenburn_force_dark_Background = 0$/;"	v
g:zenburn_high_Contrast	colors/zenburn.vim	/^    let g:zenburn_high_Contrast = 0$/;"	v
g:zenburn_old_Visual	colors/zenburn.vim	/^    let g:zenburn_old_Visual = 0$/;"	v
g:zenburn_unified_CursorColumn	colors/zenburn.vim	/^    let g:zenburn_unified_CursorColumn = 0$/;"	v
get_current_origin_url	bundle/vundle/autoload/vundle/installer.vim	/^func! s:get_current_origin_url(bundle) abort$/;"	f
get_current_sha	bundle/vundle/autoload/vundle/installer.vim	/^func! s:get_current_sha(bundle)$/;"	f
get_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^	def get_dim(glyph):$/;"	f
github_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
gsub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
has_doc	bundle/vundle/autoload/vundle/installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
helptags	bundle/vundle/autoload/vundle/installer.vim	/^func! s:helptags(rtp) abort$/;"	f
init	bundle/vundle/test/files/test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
instaweb_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
linechars	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
load_scripts	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:load_scripts(bang)$/;"	f
loaded_taglist	plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
log	bundle/vundle/autoload/vundle/installer.vim	/^func! s:log(str, ...) abort$/;"	f
make_sync_command	bundle/vundle/autoload/vundle/installer.vim	/^func! s:make_sync_command(bang, bundle) abort$/;"	f
mmc_logmon_sup	bundle/vundle/test/files/test.erl	/^-module(mmc_logmon_sup).$/;"	m
onlybitmaps	bundle/vim-powerline/fontpatcher/fontpatcher	/^	onlybitmaps = font.onlybitmaps$/;"	v
os	bundle/vim-powerline/fontpatcher/fontpatcher	/^import os$/;"	i
overlap_width	bundle/vim-powerline/fontpatcher/fontpatcher	/^			overlap_width = font.em \/ 48$/;"	v
parse_name	bundle/vundle/autoload/vundle/config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	bundle/vundle/autoload/vundle/config.vim	/^func! s:parse_options(opts)$/;"	f
parser	bundle/vim-powerline/fontpatcher/fontpatcher	/^parser = argparse.ArgumentParser(description='Font patcher for Powerline. Creates dividers and symbols in FontForge-compatible font files. Requires FontForge with Python bindings. Stores glyphs in the U+2B80-U+2BFF range ("Miscellaneous symbols and arrows"). Stores the patched font as a new, renamed font file by default.')$/;"	v
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() abort$/;"	f
pathogen#execute	autoload/pathogen.vim	/^function! pathogen#execute(...) abort$/;"	f
pathogen#expand	autoload/pathogen.vim	/^function! pathogen#expand(pattern) abort$/;"	f
pathogen#fnameescape	autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() abort$/;"	f
pathogen#incubate	autoload/pathogen.vim	/^function! pathogen#incubate(...) abort$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort$/;"	f
pathogen#interpose	autoload/pathogen.vim	/^function! pathogen#interpose(name) abort$/;"	f
pathogen#is_absolute	autoload/pathogen.vim	/^function! pathogen#is_absolute(path) abort$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) abort$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) abort$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort$/;"	f
pathogen#slash	autoload/pathogen.vim	/^function! pathogen#slash() abort$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort$/;"	f
pathogen#surround	autoload/pathogen.vim	/^function! pathogen#surround(path) abort$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort$/;"	f
process	bundle/vundle/autoload/vundle/installer.vim	/^func! s:process(bang, cmd)$/;"	f
psMat	bundle/vim-powerline/fontpatcher/fontpatcher	/^	import psMat$/;"	i
re	bundle/vim-powerline/fontpatcher/fontpatcher	/^import re$/;"	i
recall	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
rtp_add	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_add_defaults	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add_defaults()$/;"	f
rtp_rm	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_rm_a()$/;"	f
rtpath	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtpath(opts)$/;"	f
s:BEGIN_BLOCK	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BRACKET_CONTINUATION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:CACHE_REVISION	bundle/vim-powerline/autoload/Pl.vim	/^	let s:CACHE_REVISION = 7$/;"	v
s:COMPOUND_EXPRESSION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION_OP	bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:DEFAULT_LEVEL	bundle/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	bundle/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DOT_ACCESS	bundle/vim-coffee-script/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	bundle/vim-coffee-script/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:EMPTY_SEGMENT	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:EMPTY_SEGMENT = { 'type': 'empty' }$/;"	v
s:FUNCTION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:HARD_DIVIDER	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:HARD_DIVIDER = 0$/;"	v
s:KEYWORD_PAIRS	bundle/vim-coffee-script/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:LEFT_SIDE	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:LEFT_SIDE = 0$/;"	v
s:MAX_LOOKBACK	bundle/vim-coffee-script/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:PADDING	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:PADDING = 1$/;"	v
s:POSTFIX_CONDITION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:RIGHT_SIDE	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:RIGHT_SIDE = 2$/;"	v
s:SINGLE_LINE_ELSE	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SOFT_DIVIDER	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:SOFT_DIVIDER = 1$/;"	v
s:SYNTAX_COMMENT	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftWidth	bundle/vim-coffee-script/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:Tlist_Skip_Refresh	plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:abstract_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:allocated_colors	bundle/vim-powerline/autoload/Pl/Hi.vim	/^let s:allocated_colors = {$/;"	v
s:buffer_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:bundle	bundle/vundle/autoload/vundle/config.vim	/^let s:bundle = {}$/;"	v
s:coffeeIndentExpr	bundle/vim-coffee-script/after/indent/html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:commands	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:cpo_save	plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cterm2gui_dict	bundle/vim-powerline/autoload/Pl/Hi.vim	/^let s:cterm2gui_dict = {$/;"	v
s:default_modes	bundle/vim-powerline/autoload/Pl/Segment.vim	/^let s:default_modes = ['n', 'N', 'v', 'i', 'r', 's']$/;"	v
s:dir_for_worktree	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = {}$/;"	v
s:git_versions	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:hash_colors	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:htmlIndentExpr	bundle/vim-coffee-script/after/indent/html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:menu_char_prefix	plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:molokai_original	colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:pat	bundle/vim-coffee-script/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:repo_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:segment_mods	bundle/vim-powerline/autoload/Pl/Mod.vim	/^let s:segment_mods = []$/;"	v
s:temp_files	bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:tlist_app_name	plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_d_settings	plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_eiffel_settings	plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_java_settings	plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_lisp_settings	plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:vopen_warning	autoload/pathogen.vim	/^let s:vopen_warning = 0$/;"	v
s:worktree_for_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
scale_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_matrix = psMat.scale(font_dim['width'] \/ sym_dim['width'], 1)$/;"	v
scale_ratio	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_ratio = font_dim['height'] \/ sym_dim['height']$/;"	v
scale_ratio	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_ratio = font_dim['width'] \/ sym_dim['width']$/;"	v
shellesc	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
sign	bundle/vundle/autoload/vundle/installer.vim	/^func! s:sign(status)$/;"	f
stage_info	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
strip	bundle/vundle/autoload/vundle/installer.vim	/^func! s:strip(str)$/;"	f
sub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sym_attr	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_attr = SYM_ATTR[sym_glyph.unicode]$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^			sym_dim = get_dim(font[sym_glyph.unicode])$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_dim = get_dim(font[sym_glyph.unicode])$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_dim = get_dim(sym_glyph)$/;"	v
sym_ycenter	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_ycenter  = sym_dim['height'] \/ 2$/;"	v
symbols	bundle/vim-powerline/fontpatcher/fontpatcher	/^	symbols = fontforge.open(args.symbol_font)$/;"	v
sync	bundle/vundle/autoload/vundle/installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
sys	bundle/vim-powerline/fontpatcher/fontpatcher	/^import sys$/;"	i
system	bundle/vundle/autoload/vundle/installer.vim	/^func! s:system(cmd) abort$/;"	f
throw	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
tlist_pyrex_settings	plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
view_changelog	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:view_log()$/;"	f
vundle#begin	bundle/vundle/autoload/vundle.vim	/^func! vundle#begin(...) abort$/;"	f
vundle#config#activate_bundles	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#activate_bundles()$/;"	f
vundle#config#bundle	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#end	bundle/vundle/autoload/vundle.vim	/^func! vundle#end(...) abort$/;"	f
vundle#installer#clean	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#installer#shellesc	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc(cmd) abort$/;"	f
vundle#installer#shellesc_cd	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc_cd(cmd) abort$/;"	f
vundle#rc	bundle/vundle/autoload/vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
warn	autoload/pathogen.vim	/^function! s:warn(msg) abort$/;"	f
warn	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
winshell	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
zenburn_ctags	colors/zenburn.vim	/^    let _zenburn_ctags = 1$/;"	v
